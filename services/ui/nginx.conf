# server {
#     listen 8080;
#     server_name _;
    
#     # Use Docker’s internal DNS resolver, because nginx by default at startup tries to resolve DNS of all upstream and when it can't find it kills itself
#     resolver 127.0.0.11 valid=10s;
#     # Serve frontend files
#     root /usr/share/nginx/html;
#     index index.html;

#     # Serve static files and fallback to index.html for SPA routing
#     location / {
#         try_files $uri /index.html;
#     }

#     # Dynamic backend DNS resolution using variable

#     set $backend http://backend:8000;

#     # Proxy API requests to FastAPI backend
#     location /api/ {
#         proxy_pass http://backend:8000/;
#         proxy_http_version 1.1;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }

#     # MQTT WebSocket proxy with dynamic DNS too
#     set $mqtt ws://mqtt:9001;

#     # Proxy MQTT WebSocket traffic
#     location /mqtt {
#         proxy_pass http://mqtt:9001;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "Upgrade";
#         proxy_set_header Host $host;
#     }
# }

server {
    listen 8080;
    server_name _;

    # ✅ Use Docker's internal DNS resolver dynamically.
    resolver 127.0.0.11 ipv6=off valid=30s;

    root /usr/share/nginx/html;
    index index.html;

    # ✅ SPA routing
    location / {
        try_files $uri /index.html;
    }

    # Lazy backend proxy — no startup resolution
    location /api {
        set $backend http://backend:8000;   # defer resolution until request time
        proxy_pass $backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_intercept_errors off;          # don't crash on 502
    }

    # MQTT WebSocket proxy — also lazy
    location /mqtt {
        set $mqtt ws://mqtt:9001;
        proxy_pass $mqtt;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
    }
}


# server {
#     listen 8080;
#     server_name _;

#     # Point Nginx to your built frontend
#     root /usr/share/nginx/html;
#     index index.html;

#     # Serve static files directly
#     location / {
#         try_files $uri /index.html;
#     }
# }

